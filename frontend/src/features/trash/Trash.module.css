/* frontend/src/components/Features/Trash/Trash.module.css */

:root {
  --trash-text: #333333;
  --trash-muted: #666666;
  --trash-border: #e5e7eb;
  --trash-focus: #284571;

  --btn-warn-bg: #ffebee;
  --btn-warn-text: #c62828;
  --btn-warn-border: #ffcdd2;

  --btn-warn-bg-hover: #ffcdd2;
  --btn-warn-border-hover: #ef9a9a;

  --btn-restore-bg: #e3f2fd;
  --btn-restore-text: #1976d2;
  --btn-restore-border: #bbdefb;
  --btn-restore-bg-hover: #bbdefb;
}

.trashContainerRoot {
  position: relative;
  padding: 0;
}

/* Header */
.trashHeader {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
  padding-bottom: 20px;
  border-bottom: 1px solid var(--trash-border);
}

.headerControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  gap: 20px;
  flex-wrap: wrap;
}

.trashInfo {
  color: var(--trash-text);
  opacity: 0.8;
  font-size: 14px;
  line-height: 1.5;
  margin: 0;
}

/* Empty Trash button */
.emptyTrashButton {
  padding: 8px 16px;
  background-color: var(--btn-warn-bg);
  color: var(--btn-warn-text);
  border: 1px solid var(--btn-warn-border);
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  font-size: 14px;
  transition:
    background-color 0.2s,
    border-color 0.2s,
    opacity 0.2s;
  white-space: nowrap;
}

.emptyTrashButton:hover:not(:disabled) {
  background-color: var(--btn-warn-bg-hover);
  border-color: var(--btn-warn-border-hover);
}

.emptyTrashButton:focus-visible {
  outline: 2px solid var(--trash-focus);
  outline-offset: 2px;
}

.emptyTrashButton:disabled {
  background-color: #f5f5f5;
  color: #bdbdbd;
  border-color: #e0e0e0;
  cursor: not-allowed;
  opacity: 0.7;
}

/* Errors */
.errorMessage {
  padding: 12px 15px;
  margin-bottom: 20px;
  background-color: #ffebee;
  color: #c62828;
  border-radius: 4px;
  border: 1px solid #ef9a9a;
  font-size: 14px;
}

/* Loading */
.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  width: 100%;
}

.loader {
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top: 4px solid var(--trash-focus);
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Empty state */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
  color: var(--trash-muted);
  border: 2px dashed var(--trash-border);
  border-radius: 8px;
  margin-top: 20px;
}

.emptyIcon {
  width: 64px;
  height: 64px;
  margin-bottom: 20px;
  opacity: 0.5;
  color: var(--trash-muted);
}

.emptyState h3 {
  font-size: 1.5em;
  color: var(--trash-text);
  margin-bottom: 10px;
}

.emptyState p {
  font-size: 1em;
  line-height: 1.6;
  max-width: 400px;
}

/* Card grid */
.trashGrid {
  display: flex;
  flex-wrap: wrap;
  gap: 25px;
}

/* Buttons inside DocumentCard */
.actionButton {
  padding: 6px 12px;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  transition:
    background-color 0.2s,
    border-color 0.2s;
  white-space: nowrap;
}

.actionButton:focus-visible {
  outline: 2px solid var(--trash-focus);
  outline-offset: 2px;
}

.restoreButton {
  background-color: var(--btn-restore-bg);
  color: var(--btn-restore-text);
  border-color: var(--btn-restore-border);
}
.restoreButton:hover {
  background-color: var(--btn-restore-bg-hover);
}

.deleteButton {
  background-color: var(--btn-warn-bg);
  color: var(--btn-warn-text);
  border-color: var(--btn-warn-border);
}
.deleteButton:hover {
  background-color: var(--btn-warn-bg-hover);
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .emptyTrashButton,
  .actionButton,
  .loader {
    animation: none;
    transition: none;
  }
}

/* High contrast / forced colors */
@media (forced-colors: active) {
  .emptyTrashButton,
  .actionButton {
    forced-color-adjust: none;
    border: 1px solid ButtonText;
    color: ButtonText;
    background: Canvas;
  }
  .errorMessage,
  .emptyState {
    border-color: ButtonText;
  }
}
